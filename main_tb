LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
-------------------------------------------------------------------------------------------------
ENTITY main_tb IS
END ENTITY main_tb;
-------------------------------------------------------------------------------------------------
ARCHITECTURE testbench OF main_tb IS
   ---------------------------------------
	COMPONENT main IS
	PORT (	a			: 	IN 	STD_LOGIC_VECTOR(3 DOWNTO 0);	--número de entrada 1
				b			: 	IN 	STD_LOGIC_VECTOR(3 DOWNTO 0);	--número de entrada 2
				cin_a		:	IN 	STD_LOGIC;							--entrada sw1, selecciona si se desea sumar o restar
				am_sel	:	IN		STD_LOGIC;							--entrada sw0, selecciona si sumar/restar o multiplicar
				sseg		:	OUT 	STD_LOGIC_VECTOR(6 DOWNTO 0);	--salida para HEX0
				sseg1		:	OUT 	STD_LOGIC_VECTOR(6 DOWNTO 0);	--salida para HEX1
				sseg2		:	OUT 	STD_LOGIC_VECTOR(6 DOWNTO 0);	--salida para HEX2
				sseg3		:	OUT 	STD_LOGIC_VECTOR(6 DOWNTO 0)	--salida para HEX3
				);
	END COMPONENT main;
	----------------------------------------
	SIGNAL a_t 			: std_LOGIC_VECTOR (3 DOWNTO 0):= "0000";
	SIGNAL b_t 			: std_LOGIC_VECTOR (3 DOWNTO 0) := "0000";
	SIGNAL cin_a_t		: STD_LOGIC :='0';
	SIGNAL am_sel_t 	: STD_LOGIC :='0';
	SIGNAL sseg_t 		: STD_LOGIC_VECTOR(6 DOWNTO 0):="0000000";
	SIGNAL sseg1_t	 	: STD_LOGIC_VECTOR(6 DOWNTO 0):="0000000";
	SIGNAL sseg2_t 	: STD_LOGIC_VECTOR(6 DOWNTO 0):="0000000";
	SIGNAL sseg3_t	 	: STD_LOGIC_VECTOR(6 DOWNTO 0):="0000000";
	
BEGIN
DUT: main PORT MAP
( a 			=> a_t,
  b			=> b_t,
  cin_a		=> cin_a_t,
  am_sel  	=> am_sel_t,
  sseg		=> sseg_t,
  sseg1		=> sseg1_t,
  sseg2		=> sseg2_t,
  sseg3		=> sseg3_t
 );
prueba: 
			process BEGIN
				a_t 		<= "0000";
				b_t 		<= "0000";
				cin_a_t 	<= '1';
				am_sel_t <= '1';
				WAIT FOR 10 ns;
				a_t 		<= "0000";
				b_t 		<= "0000";
				cin_a_t 	<= '0';
				am_sel_t <= '1';
				WAIT FOR 10 ns;
				a_t 		<= "0000";
				b_t 		<= "0000";
				cin_a_t 	<= '1';
				am_sel_t <= '0';
				WAIT FOR 10 ns;
				a_t 		<= "0010";
				b_t 		<= "0011";
				cin_a_t 	<= '1';
				am_sel_t <= '1';
				WAIT FOR 10 ns;
				a_t 		<= "0010";
				b_t 		<= "0011";
				cin_a_t 	<= '0';
				am_sel_t <= '1';
				WAIT FOR 10 ns;
				a_t 		<= "0010";
				b_t 		<= "0011";
				cin_a_t 	<= '0';
				am_sel_t <= '0';
				WAIT FOR 10 ns;
				a_t 		<= "1001";
				b_t 		<= "1001";
				cin_a_t 	<= '1';
				am_sel_t <= '1';
				WAIT FOR 10 ns;
				a_t 		<= "1001";
				b_t 		<= "1001";
				cin_a_t 	<= '0';
				am_sel_t <= '1';
				WAIT FOR 10 ns;
				a_t 		<= "1001";
				b_t 		<= "1001";
				cin_a_t 	<= '1';
				am_sel_t <= '0';
				WAIT FOR 10 ns;
				a_t 		<= "1101";
				b_t 		<= "0000";
				cin_a_t 	<= '1';
				am_sel_t <= '1';
				WAIT FOR 10 ns;
				a_t 		<= "1101";
				b_t 		<= "0000";
				cin_a_t 	<= '0';
				am_sel_t <= '1';
				WAIT FOR 10 ns;
				a_t 		<= "1101";
				b_t 		<= "0000";
				cin_a_t 	<= '0';
				am_sel_t <= '0';
			END PROCESS prueba;		

END ARCHITECTURE testbench;
