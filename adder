LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE IEEE.NUMERIC_STD.ALL;
----------------------------------------------------------------------------------------------------------------
ENTITY adder IS

 PORT ( 	a			: 	IN 	STD_LOGIC_VECTOR(3 DOWNTO 0);
			b			: 	IN 	STD_LOGIC_VECTOR(3 DOWNTO 0);
			cin		:	IN 	STD_LOGIC :='0';
			s2			:	OUT   STD_LOGIC_VECTOR (3 DOWNTO 0);
			cout		:	OUT	STD_LOGIC
			);

END ENTITY adder;
----------------------------------------------------------------------------------------------------------------
ARCHITECTURE behaviour of adder IS

	SIGNAL p0	:	STD_LOGIC_VECTOR (3 DOWNTO 0);
	SIGNAL s0	:	STD_LOGIC_VECTOR (3 DOWNTO 0);
	SIGNAL s1	:	STD_LOGIC_VECTOR (3 DOWNTO 0);
	SIGNAL amenorb : STD_LOGIC;
	SIGNAL q0	:	STD_LOGIC;
	SIGNAL q1	:	STD_LOGIC;
	SIGNAL q2	:	STD_LOGIC;
	
-----------------------------------------------------------------------------------------------------------------
BEGIN

	p0(0) <= b(0) XOR (NOT cin);
	p0(1) <= b(1) XOR (NOT cin);
	p0(2) <= b(2) XOR (NOT cin);
	p0(3) <= b(3) XOR (NOT cin);
	
	
	
	s2		<= s1	WHEN	amenorb='1' AND cin='0' else
				s0 WHEN  amenorb='1' AND cin='1' else
				s0 WHEN 	amenorb='0'					else "0000";
	
				
						
		
	
	
		fullAdder_0	: ENTITY work.fullAdder
		PORT MAP (  a    =>  a(0),
						b    =>  p0(0),
						Cin  =>  (NOT Cin),
						s    =>  s0(0),
						Cout =>  q0);
						
		fullAdder_1	: ENTITY work.fullAdder
		PORT MAP (  a    =>  a(1),
						b    =>  p0(1),
						Cin  =>  q0,
						s    =>  s0(1),
						Cout =>  q1);
						
		fullAdder_2	: ENTITY work.fullAdder
		PORT MAP (  a    =>  a(2),
						b    =>  p0(2),
						Cin  =>  q1,
						s    =>  s0(2),
						Cout =>  q2);
						
		fullAdder_3	: ENTITY work.fullAdder
		PORT MAP (  a    =>  a(3),
						b    =>  p0(3),
						Cin  =>  q2,
						s    =>  s0(3),
						Cout =>  Cout);
						
		fullAdder_c2 : ENTITY work.sum4_with_fullAdder
		PORT MAP (  a    =>  (NOT s0),
						b    =>  "0001",
						s    =>  s1);
						
		comparator_0 : ENTITY work.nBitcomparator_ab
		PORT MAP (  x    	=>  a,
						y    	=>  b,
						lg_a  =>  amenorb);
						
		
END behaviour;
