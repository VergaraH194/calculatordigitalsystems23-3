LIBRARY ieee;
USE ieee.std_logic_1164.all;
----------------------------------------------------------------------
ENTITY bin_to_7seg IS
 PORT ( 		bin	: 	IN 	STD_LOGIC_VECTOR(3 DOWNTO 0):="0000"; --número para hex3
			bin1	: 	IN 	STD_LOGIC_VECTOR(3 DOWNTO 0):="0000"; --número para hex2
			bin2	: 	IN 	STD_LOGIC_VECTOR(3 DOWNTO 0):="0000"; --número para hex1
			bin3	: 	IN 	STD_LOGIC_VECTOR(7 DOWNTO 0):="00000000"; --número para hex0
			cin	:	IN 	STD_LOGIC:='0';
			am_sel	:	IN	STD_LOGIC; --entrada de sw0, determina si se hace multiplicación o suma
			cout	:	OUT	STD_LOGIC;
			error	:	IN 	STD_LOGIC:='0'; --bandera en caso de que entrada sea mayor a 9
			sseg	:	OUT 	STD_LOGIC_VECTOR(6 DOWNTO 0); --hex0
			sseg1	:	OUT 	STD_LOGIC_VECTOR(6 DOWNTO 0); --hex1
			sseg2	:	OUT 	STD_LOGIC_VECTOR(6 DOWNTO 0); --hex2
			sseg3	:	OUT 	STD_LOGIC_VECTOR(6 DOWNTO 0)  --hex3
			);

END ENTITY bin_to_7seg;
--------------------------------------------------------------------
ARCHITECTURE functional of bin_to_7seg IS


	
	
BEGIN
-------------------------------------------------
WITH bin SELECT

sseg3 <=

			"1000000" WHEN "0000", --0

			"1111001" WHEN "0001", --1

			"0100100" WHEN "0010",

			"0110000" WHEN "0011", 

			"0011001" WHEN "0100",

			"0010010" WHEN "0101",

			"0000010" WHEN "0110",

			"1111000" WHEN "0111",

			"0000000" WHEN "1000", --8

			"0010000" WHEN "1001", --9

			"0000110" WHEN OTHERS; --error
----------------------------------------------
WITH bin2 SELECT

sseg2 <=

			"1000000" WHEN "0000", --0

			"1111001" WHEN "0001", --1

			"0100100" WHEN "0010",

			"0110000" WHEN "0011", 

			"0011001" WHEN "0100",

			"0010010" WHEN "0101",

			"0000010" WHEN "0110",

			"1111000" WHEN "0111",

			"0000000" WHEN "1000", --8

			"0010000" WHEN "1001", --9

			"0000110" WHEN OTHERS; --error
--------------------------------------------------
sseg <=

			"1000000" WHEN bin3="00000000" AND error='0' else --0

			"1111001" WHEN bin3="00000001" AND error='0'else  --1

			"0100100" WHEN bin3="00000010" AND error='0'else

			"0110000" WHEN bin3="00000011" AND error='0'else 

			"0011001" WHEN bin3="00000100" AND error='0'else

			"0010010" WHEN bin3="00000101" AND error='0'else

			"0000010" WHEN bin3="00000110" AND error='0'else

			"1111000" WHEN bin3="00000111" AND error='0'else --7

			"0000000" WHEN bin3="00001000" AND error='0'else --8

			"0010000" WHEN bin3="00001001" AND error='0'else --9
			
			"0000110"; --error
			
----------------------------------------------------------------------------------------------------			
	sseg1 <= 		"0111111" WHEN ((bin < bin2) AND Cin = '0' AND error='0' AND am_sel='1') else --signo menos
	
				"0000110" WHEN (error='1') else --error
				
				"1000000" WHEN bin1="0000" AND error='0' else --0

				"1111001" WHEN bin1="0001" AND error='0'else  --1

				"0100100" WHEN bin1="0010" AND error='0'else

				"0110000" WHEN bin1="0011" AND error='0'else 

				"0011001" WHEN bin1="0100" AND error='0'else

				"0010010" WHEN bin1="0101" AND error='0'else

				"0000010" WHEN bin1="0110" AND error='0'else

				"1111000" WHEN bin1="0111" AND error='0'else

				"0000000" WHEN bin1="1000" AND error='0'else --8

				"0010000" WHEN bin1="1001" AND error='0'else --9
				
				"1111111";
END functional;
